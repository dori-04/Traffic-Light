int currentState = 1;  // 현재 신호 상태 (0: 빨강, 1: 초록, 2: 노랑)

void setup() {
  size(400, 600);
  noCursor();  // 마우스 포인터 숨기기
}

void draw() {
  background(255);
  drawRoad();
  drawCrosswalk();
  drawTrafficLight();
  drawCar(mouseX, mouseY);
  
  // 도로 중심에서 마우스까지의 거리 계산
  float distance = dist(200, height / 2, mouseX, mouseY);
  
  // 거리에 따라 신호등 상태 변경
  if (distance < 50) {
    currentState = 0;  // 빨간불
  } else if (distance < 150) {
    currentState = 2;  // 노란불
  } else {
    currentState = 1;  // 초록불
  }
}

void drawRoad() {
  // 도로 그리기
  fill(50);
  rect(150, 0, 100, height);
}

void drawCrosswalk() {
  // 횡단보도 그리기
  stroke(255);
  strokeWeight(10);  // 횡단보도에만 적용될 선 굵기 설정
  line(0, height / 2, width, height / 2);
  
  // strokeWeight를 다시 원래대로 되돌리기 위해 설정 초기화
  noStroke();
}

void drawTrafficLight() {
  // 신호등 배경 그리기
  fill(50);
  rect(300, 50, 50, 150);
  
  // 빨간색 신호등
  if (currentState == 0) {
    fill(255, 0, 0);
  } else {
    fill(100, 0, 0);
  }
  ellipse(325, 75, 30, 30);
  
  // 노란색 신호등
  if (currentState == 2) {
    fill(255, 255, 0);
  } else {
    fill(100, 100, 0);
  }
  ellipse(325, 125, 30, 30);
  
  // 초록색 신호등
  if (currentState == 1) {
    fill(0, 255, 0);
  } else {
    fill(0, 100, 0);
  }
  ellipse(325, 175, 30, 30);
}

void drawCar(float x, float y) {
  // 자동차가 도로 안에 위치하도록 제한
  x = constrain(x, 150 + 20, 150 + 100 - 20);
  
  // 자동차 몸체
  fill(255, 200, 0);  // 노란색으로 설정
  rect(x - 20, y - 10, 40, 20, 5);  // 라운드 코너를 가진 사각형
  
  // 창문
  fill(150, 200, 255);  // 연한 파란색으로 설정
  rect(x - 15, y - 8, 15, 12, 3);  // 라운드 코너를 가진 작은 사각형
  
  // 휠
  fill(0);  // 검정색
  ellipse(x - 12, y + 7, 8, 8);  // 왼쪽 바퀴
  ellipse(x + 12, y + 7, 8, 8);  // 오른쪽 바퀴
}
